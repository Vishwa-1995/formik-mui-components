{"version":3,"file":"imageCropper.js","sourceRoot":"","sources":["../../../../src/FormsUI/fileUpload/imageCropper.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport { create } from \"zustand\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  DialogContent,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@mui/material\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\n\r\ntype ImageCropperStore = {\r\n  image: string;\r\n  fileName: string;\r\n  onCropDone: (x: any, y: string, z: string) => void;\r\n  onCropCancel: () => void;\r\n  close: boolean;\r\n};\r\n\r\nconst useImageCropperStore = create<ImageCropperStore>((set) => ({\r\n  image: \"\",\r\n  fileName: \"\",\r\n  onCropDone: (x) => {},\r\n  onCropCancel: () => {},\r\n  close: false,\r\n}));\r\n\r\nexport const openImageCropper = (\r\n  image: string,\r\n  fileName: string,\r\n  onCropDone: (x: any, y: string, z: string) => void,\r\n  onCropCancel: () => void\r\n) => {\r\n  useImageCropperStore.setState({\r\n    image: image,\r\n    fileName: fileName,\r\n    onCropDone: onCropDone,\r\n    onCropCancel: onCropCancel,\r\n    close: true,\r\n  });\r\n};\r\n\r\nexport const closeImageCropper = () => {\r\n  useImageCropperStore.setState({\r\n    close: false,\r\n  });\r\n};\r\n\r\nconst ImageCropper: React.FC = () => {\r\n  const { image, fileName, onCropDone, onCropCancel, close } =\r\n    useImageCropperStore();\r\n\r\n  const handleClose = () => {\r\n    useImageCropperStore.setState({\r\n      close: false,\r\n    });\r\n    onCropCancel();\r\n  };\r\n\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n  const [zoom, setZoom] = useState(1);\r\n  const [croppedArea, setCroppedArea] = useState(null);\r\n  const [aspectRatio, setAspectRatio] = useState(1 / 1);\r\n\r\n  const onCropComplete = (\r\n    croppedAreaPercentage: any,\r\n    croppedAreaPixels: any\r\n  ) => {\r\n    setCroppedArea(croppedAreaPixels);\r\n  };\r\n\r\n  const onAspectRatioChange = (event: any) => {\r\n    setAspectRatio(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen\r\n      open={close}\r\n      onClose={handleClose}\r\n      fullWidth={true}\r\n      PaperProps={{\r\n        style: { borderRadius: 15 },\r\n      }}\r\n    >\r\n      <DialogContent style={{ textAlign: \"center\" }}>\r\n        <Box>\r\n          <Cropper\r\n            image={image}\r\n            aspect={aspectRatio}\r\n            crop={crop}\r\n            zoom={zoom}\r\n            onCropChange={setCrop}\r\n            onZoomChange={setZoom}\r\n            onCropComplete={onCropComplete}\r\n            style={{\r\n              containerStyle: {\r\n                width: \"100%\",\r\n                height: \"75%\",\r\n                backgroundColor: \"#fff\",\r\n              },\r\n            }}\r\n          />\r\n        </Box>\r\n      </DialogContent>\r\n      <FormControl>\r\n        <RadioGroup\r\n          row\r\n          name=\"row-radio-buttons-group\"\r\n          defaultValue={1 / 1}\r\n          onChange={onAspectRatioChange}\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n        >\r\n          <FormControlLabel value={1 / 1} control={<Radio />} label=\"1:1\" />\r\n          <FormControlLabel value={5 / 4} control={<Radio />} label=\"5:4\" />\r\n          <FormControlLabel value={4 / 3} control={<Radio />} label=\"4:3\" />\r\n          <FormControlLabel value={3 / 2} control={<Radio />} label=\"3:2\" />\r\n          <FormControlLabel value={5 / 3} control={<Radio />} label=\"5:3\" />\r\n          <FormControlLabel value={16 / 9} control={<Radio />} label=\"16:9\" />\r\n          <FormControlLabel value={3 / 1} control={<Radio />} label=\"3:1\" />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      <DialogActions style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <Button onClick={handleClose} variant=\"outlined\">\r\n          Cancel\r\n        </Button>\r\n        <Box style={{ width: 10 }} />\r\n        <Button\r\n          onClick={() => {\r\n            onCropDone(croppedArea, image, fileName);\r\n          }}\r\n          variant=\"contained\"\r\n          style={{ fontWeight: \"bold\" }}\r\n          color=\"primary\"\r\n        >\r\n          Done\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ImageCropper;\r\n"]}