{"version":3,"file":"index.js","sourceRoot":"","sources":["index.jsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,MAAM,QAAQ,CAAC;AACpD,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAEhE,MAAM,iBAAiB,GAAG,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,UAAU,EAAE,EAAE,EAAE;IAC7D,MAAM,EAAE,aAAa,EAAE,GAAG,gBAAgB,EAAE,CAAC;IAC7C,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IAErC,MAAM,YAAY,GAAG,CAAC,GAAG,EAAE,EAAE;QAC3B,MAAM,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;QAC7B,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC;IAEF,MAAM,YAAY,GAAG;QACnB,GAAG,KAAK;QACR,GAAG,UAAU;QACb,OAAO,EAAE,UAAU;QACnB,SAAS,EAAE,IAAI;QACf,MAAM,EAAE,IAAI;QACZ,QAAQ,EAAE,YAAY;KACvB,CAAC;IAEF,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;QACvC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC;QAC1B,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;IACvC,CAAC;IAED,OAAO,CACL,KAAC,SAAS,OACJ,YAAY,EAChB,UAAU,EAAE,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,EACvC,eAAe,EAAE,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,EAC5C,mBAAmB,EAAE,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,YAE/C,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;YACzB,OAAO,CACL,KAAC,QAAQ,IAAW,KAAK,EAAE,IAAI,CAAC,KAAK,YACnC,MAAC,UAAU,IAAC,OAAO,EAAC,WAAW,aAC7B,YAAG,SAAS,EAAE,IAAI,CAAC,KAAK,GAAM,kBAAa,IAAI,CAAC,IAAI,IACzC,IAHA,GAAG,CAIP,CACZ,CAAC;QACJ,CAAC,CAAC,GACQ,CACb,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,iBAAiB,CAAC","sourcesContent":["import React from \"react\";\r\nimport { useField, useFormikContext } from \"formik\";\r\nimport { MenuItem, TextField, Typography } from \"@mui/material\";\r\n\r\nconst IconSelectWrapper = ({ name, options, ...otherProps }) => {\r\n  const { setFieldValue } = useFormikContext();\r\n  const [field, meta] = useField(name);\r\n\r\n  const handleChange = (evt) => {\r\n    const { value } = evt.target;\r\n    setFieldValue(name, value);\r\n  };\r\n\r\n  const configSelect = {\r\n    ...field,\r\n    ...otherProps,\r\n    variant: \"outlined\",\r\n    fullWidth: true,\r\n    select: true,\r\n    onChange: handleChange,\r\n  };\r\n\r\n  if (meta && meta.touched && meta.error) {\r\n    configSelect.error = true;\r\n    configSelect.helperText = meta.error;\r\n  }\r\n\r\n  return (\r\n    <TextField\r\n      {...configSelect}\r\n      inputProps={{ style: { fontSize: 13 } }}\r\n      InputLabelProps={{ style: { fontSize: 13 } }}\r\n      FormHelperTextProps={{ style: { fontSize: 11 } }}\r\n    >\r\n      {options.map((item, pos) => {\r\n        return (\r\n          <MenuItem key={pos} value={item.value}>\r\n            <Typography variant=\"subtitle2\">\r\n              <i className={item.label}></i>&nbsp;&nbsp;{item.name}\r\n            </Typography>\r\n          </MenuItem>\r\n        );\r\n      })}\r\n    </TextField>\r\n  );\r\n};\r\n\r\nexport default IconSelectWrapper;\r\n"]}