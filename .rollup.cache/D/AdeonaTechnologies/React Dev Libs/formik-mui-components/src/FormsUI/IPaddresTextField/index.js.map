{"version":3,"file":"index.js","sourceRoot":"","sources":["index.jsx"],"names":[],"mappings":";AAAA,OAAO,EAAC,QAAQ,EAAE,gBAAgB,EAAC,MAAM,QAAQ,CAAC;AAClD,OAAO,EAAC,QAAQ,EAAE,SAAS,EAAC,MAAM,eAAe,CAAC;AAClD,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,MAAM,yBAAyB,GAAG,CAAC,EACI,IAAI,EACJ,GAAG,UAAU,EAChB,EAAE,EAAE;IACpC,MAAM,EAAC,aAAa,EAAC,GAAG,gBAAgB,EAAE,CAAC;IAC3C,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IAErC,MAAM,YAAY,GAAG,GAAG,CAAC,EAAE;QACvB,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;QAElC,MAAM,KAAK,GAAG,aAAa,CAAC;QAC5B,IAAI,MAAM,GAAG,QAAQ,EAAE,MAAM,CAAC;QAC9B,IAAI,KAAK,GAAG,QAAQ,EAAE,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC3C,IAAI,QAAQ,GAAG,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;QAC/C,IAAI,SAAS,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YACxB,SAAS,GAAG,EAAE,CAAC;QACnB,CAAC;aAAM,IAAI,MAAM,KAAK,KAAK,IAAI,QAAQ,GAAG,CAAC,IAAI,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;YACzG,SAAS,GAAG,QAAQ,GAAG,GAAG,CAAC;QAC/B,CAAC;aAAM,IAAI,QAAQ,GAAG,CAAC,IAAI,MAAM,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC;YAC5C,SAAS,GAAG,QAAQ,EAAE,SAAS,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;QACnD,CAAC;aAAM,CAAC;YACJ,SAAS,GAAG,QAAQ,CAAC;QACzB,CAAC;QAED,aAAa,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACnC,CAAC,CAAC;IAEF,MAAM,YAAY,GAAG;QACjB,GAAG,KAAK;QACR,GAAG,UAAU;QACb,OAAO,EAAE,UAAU;QACnB,SAAS,EAAE,IAAI;QACf,MAAM,EAAE,OAAO;QACf,QAAQ,EAAE,YAAY;KACzB,CAAC;IAEF,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;QACrC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC;QAC1B,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;IACzC,CAAC;IAED,OAAO,CACH,KAAC,SAAS,OAAK,YAAY,EAAE,MAAM,EAAC,OAAO,GAAE,CAChD,CAAC;AACN,CAAC,CAAC;AAEF,eAAe,yBAAyB,CAAC","sourcesContent":["import {useField, useFormikContext} from \"formik\";\r\nimport {MenuItem, TextField} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst IPAddressTextFieldWrapper = ({\r\n                                       name,\r\n                                       ...otherProps\r\n                                   }) => {\r\n    const {setFieldValue} = useFormikContext();\r\n    const [field, meta] = useField(name);\r\n\r\n    const handleChange = evt => {\r\n        const newValue = evt.target.value;\r\n\r\n        const regex = /^[0-9.\\b]+$/;\r\n        let length = newValue?.length;\r\n        let index = newValue?.lastIndexOf('.') + 1;\r\n        let noOfDots = newValue?.split('.').length - 1;\r\n        let updateVal = '123';\r\n        if (!regex.test(newValue)) {\r\n            updateVal = '';\r\n        } else if (length !== index && noOfDots < 3 && field?.value?.length < length && (length - index) % 3 === 0) {\r\n            updateVal = newValue + '.';\r\n        } else if (noOfDots > 3 || length - index > 3) {\r\n            updateVal = newValue?.substring(0, length - 1);\r\n        } else {\r\n            updateVal = newValue;\r\n        }\r\n\r\n        setFieldValue(name, updateVal);\r\n    };\r\n\r\n    const configSelect = {\r\n        ...field,\r\n        ...otherProps,\r\n        variant: 'outlined',\r\n        fullWidth: true,\r\n        margin: \"dense\",\r\n        onChange: handleChange\r\n    };\r\n\r\n    if (meta && meta.touched && meta.error) {\r\n        configSelect.error = true;\r\n        configSelect.helperText = meta.error;\r\n    }\r\n\r\n    return (\r\n        <TextField {...configSelect} margin=\"dense\"/>\r\n    );\r\n};\r\n\r\nexport default IPAddressTextFieldWrapper;"]}