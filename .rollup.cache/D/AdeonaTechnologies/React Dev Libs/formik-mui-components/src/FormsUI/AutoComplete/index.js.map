{"version":3,"file":"index.js","sourceRoot":"","sources":["index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useField, useFormikContext } from \"formik\";\r\nimport {\r\n  Autocomplete,\r\n  AutocompleteProps,\r\n  debounce,\r\n  LinearProgress,\r\n  TextField,\r\n} from \"@mui/material\";\r\n\r\ntype AutoCompleteWrapperProps = {\r\n  freeSolo: boolean;\r\n  disabled: boolean;\r\n  name: string;\r\n  getOptions: (query: string) => Promise<any>;\r\n  label: string;\r\n  customHandleChange?: () => void;\r\n} & Partial<AutocompleteProps<any, any, any, any>>;\r\n\r\nconst AutoCompleteWrapper: React.FC<AutoCompleteWrapperProps> = ({\r\n  freeSolo,\r\n  disabled,\r\n  name,\r\n  getOptions,\r\n  customHandleChange,\r\n  ...otherProps // Capture unknown props\r\n}) => {\r\n  const { setFieldValue } = useFormikContext();\r\n  const [field, mata] = useField(name);\r\n\r\n  const [options, setOptions] = useState<{ label: string; value: number }[]>(\r\n    []\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchOption, setSearchOption] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchOptions(searchOption);\r\n  }, [searchOption]);\r\n\r\n  const fetchOptions = useCallback(\r\n    debounce(async (query) => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await getOptions(query);\r\n        const optionsData = (response as { name: string; id: number }[])?.map(\r\n          (e) => ({\r\n            label: e.name,\r\n            value: e.id,\r\n          })\r\n        );\r\n        setOptions(optionsData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching options:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }, 500), // 500ms debounce delay\r\n    []\r\n  );\r\n\r\n  const handleChange = (event, value) => {\r\n    setFieldValue(name, value);\r\n    customHandleChange && customHandleChange();\r\n  };\r\n\r\n  const configAutocomplete: any = {\r\n    ...field,\r\n    ...otherProps,\r\n    variant: \"outlined\",\r\n    fullWidth: true,\r\n  };\r\n\r\n  if (mata && mata.touched && mata.error) {\r\n    configAutocomplete.error = true;\r\n    configAutocomplete.helperText = mata.error;\r\n  }\r\n\r\n  return (\r\n    <Autocomplete\r\n      freeSolo={freeSolo}\r\n      disabled={disabled}\r\n      onChange={handleChange}\r\n      onInputChange={(event, value) => {\r\n        setSearchOption(value);\r\n      }}\r\n      options={options}\r\n      noOptionsText=\"No options\"\r\n      getOptionLabel={(option: any) => option?.label || option}\r\n      isOptionEqualToValue={() => true}\r\n      value={field.value || null}\r\n      renderInput={(params) => (\r\n        <>\r\n          <TextField\r\n            {...params}\r\n            {...configAutocomplete}\r\n            disabled={disabled}\r\n            margin=\"dense\"\r\n            InputProps={{\r\n              ...params.InputProps,\r\n              endAdornment: <>{params.InputProps.endAdornment}</>,\r\n            }}\r\n          />\r\n          {loading && <LinearProgress />}\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AutoCompleteWrapper;\r\n"]}