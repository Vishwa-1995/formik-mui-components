{"version":3,"file":"index.js","sourceRoot":"","sources":["index.jsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,MAAM,QAAQ,CAAC;AACpD,OAAO,EAAE,UAAU,EAAE,oBAAoB,EAAE,MAAM,qBAAqB,CAAC;AACvE,OAAO,EAAE,YAAY,EAAE,MAAM,kCAAkC,CAAC;AAEhE,MAAM,aAAa,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,UAAU,EAAE,EAAE,EAAE;IAC9C,MAAM,EAAE,aAAa,EAAE,GAAG,gBAAgB,EAAE,CAAC;IAC7C,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IAErC,MAAM,YAAY,GAAG,CAAC,GAAG,EAAE,EAAE;QACzB,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAC7B,CAAC,CAAC;IAEF,MAAM,oBAAoB,GAAG;QACzB,GAAG,KAAK;QACR,GAAG,UAAU;QACb,QAAQ,EAAE,YAAY;KACzB,CAAC;IAEF,MAAM,eAAe,GAAG;QACpB,OAAO,EAAE,UAAU;QACnB,SAAS,EAAE,IAAI;QACf,MAAM,EAAE,OAAO;KAClB,CAAC;IAEF,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;QACrC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC;QAC7B,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;IAC5C,CAAC;IAED,OAAO,CACH,KAAC,oBAAoB,IAAC,WAAW,EAAE,YAAY,YAC3C,KAAC,UAAU,IACP,KAAK,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC,KACpB,oBAAoB,EACxB,SAAS,EAAE,EAAE,SAAS,EAAE,EAAE,GAAG,eAAe,EAAE,EAAE,GAElD,GACiB,CAC1B,CAAC;AACN,CAAC,CAAC;AAEF,eAAe,aAAa,CAAC","sourcesContent":["import React from \"react\";\r\nimport { useField, useFormikContext } from \"formik\";\r\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\n\r\nconst MonthlyPicker = ({ name, ...otherProps }) => {\r\n    const { setFieldValue } = useFormikContext();\r\n    const [field, meta] = useField(name);\r\n\r\n    const handleChange = (evt) => {\r\n        setFieldValue(name, evt);\r\n    };\r\n\r\n    const configDateTimePicker = {\r\n        ...field,\r\n        ...otherProps,\r\n        onChange: handleChange,\r\n    };\r\n\r\n    const configTextField = {\r\n        variant: \"outlined\",\r\n        fullWidth: true,\r\n        margin: \"dense\"\r\n    };\r\n\r\n    if (meta && meta.touched && meta.error) {\r\n        configTextField.error = true;\r\n        configTextField.helperText = meta.error;\r\n    }\r\n\r\n    return (\r\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n            <DatePicker\r\n                views={['year', 'month']} // Only show year and month views\r\n                {...configDateTimePicker}\r\n                slotProps={{ textField: { ...configTextField } }}\r\n            // renderInput={(params) => <TextField {...params} {...configTextField} margin=\"dense\" />}\r\n            />\r\n        </LocalizationProvider>\r\n    );\r\n};\r\n\r\nexport default MonthlyPicker;\r\n"]}