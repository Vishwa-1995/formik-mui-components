{"version":3,"file":"index.js","sourceRoot":"","sources":["index.jsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,MAAM,QAAQ,CAAC;AACpD,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAEpD,MAAM,aAAa,GAAG,CAAC,EACnB,IAAI,EACJ,OAAO,EACP,kBAAkB,EAClB,GAAG,UAAU,EAChB,EAAE,EAAE;IACD,MAAM,EAAE,aAAa,EAAE,GAAG,gBAAgB,EAAE,CAAC;IAC7C,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IAErC,MAAM,YAAY,GAAG,GAAG,CAAC,EAAE;QACvB,MAAM,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;QAC7B,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC/B,CAAC,CAAC;IAEF,MAAM,YAAY,GAAG;QACjB,GAAG,KAAK;QACR,GAAG,UAAU;QACb,OAAO,EAAE,UAAU;QACnB,SAAS,EAAE,IAAI;QACf,MAAM,EAAE,IAAI;QACZ,MAAM,EAAE,OAAO;QACf,QAAQ,EAAE,kBAAkB,IAAI,YAAY;KAC/C,CAAC;IAEF,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;QACrC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC;QAC1B,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;IACzC,CAAC;IAED,OAAO,CACH,KAAC,SAAS,OAAK,YAAY,YACtB,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;YAC5C,OAAO,CACH,KAAC,QAAQ,IAAW,KAAK,EAAE,IAAI,CAAC,KAAK,YAChC,IAAI,CAAC,KAAK,IADA,GAAG,CAEP,CACd,CAAA;QACL,CAAC,CAAC,CAAC,CAAC;YACA,KAAC,QAAQ,IAAC,QAAQ,8BAEP,GAEP,CACf,CAAC;AACN,CAAC,CAAC;AAEF,eAAe,aAAa,CAAC","sourcesContent":["import React from 'react';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport { MenuItem, TextField } from '@mui/material';\r\n\r\nconst SelectWrapper = ({\r\n    name,\r\n    options,\r\n    customHandleChange,\r\n    ...otherProps\r\n}) => {\r\n    const { setFieldValue } = useFormikContext();\r\n    const [field, meta] = useField(name);\r\n\r\n    const handleChange = evt => {\r\n        const { value } = evt.target;\r\n        setFieldValue(name, value);\r\n    };\r\n\r\n    const configSelect = {\r\n        ...field,\r\n        ...otherProps,\r\n        variant: 'outlined',\r\n        fullWidth: true,\r\n        select: true,\r\n        margin: \"dense\",\r\n        onChange: customHandleChange || handleChange\r\n    };\r\n\r\n    if (meta && meta.touched && meta.error) {\r\n        configSelect.error = true;\r\n        configSelect.helperText = meta.error;\r\n    }\r\n\r\n    return (\r\n        <TextField {...configSelect}>\r\n            {options.length > 0 ? options.map((item, pos) => {\r\n                return (\r\n                    <MenuItem key={pos} value={item.value}>\r\n                        {item.label}\r\n                    </MenuItem>\r\n                )\r\n            }) :\r\n                <MenuItem disabled>\r\n                    No Data\r\n                </MenuItem>\r\n            }\r\n        </TextField>\r\n    );\r\n};\r\n\r\nexport default SelectWrapper;"]}