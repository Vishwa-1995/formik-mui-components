{"version":3,"file":"index.js","sourceRoot":"","sources":["index.jsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,MAAM,QAAQ,CAAC;AACpD,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAE1C,MAAM,qBAAqB,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,UAAU,EAAE,EAAE,EAAE;IAC1E,MAAM,EAAE,aAAa,EAAE,GAAG,gBAAgB,EAAE,CAAC;IAC7C,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IAErC,MAAM,iBAAiB,GAAG,CAAC,CAAC,EAAE,EAAE;QAC9B,MAAM,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7B,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;YAC3B,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC7B,CAAC;aAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;YACpE,aAAa,CAAC,IAAI,EAAE,KAAK,GAAG,MAAM,CAAC,CAAC;QACtC,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,cAAc,GAAG;QACrB,GAAG,KAAK;QACR,GAAG,UAAU;QACb,SAAS,EAAE,IAAI;QACf,OAAO,EAAE,UAAU;QACnB,QAAQ,EAAE,iBAAiB;KAC5B,CAAC;IAEF,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;QACvC,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC;QAC5B,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;IACzC,CAAC;IAED,OAAO,KAAC,SAAS,OAAK,cAAc,EAAE,MAAM,EAAC,OAAO,GAAG,CAAC;AAC1D,CAAC,CAAC;AAEF,eAAe,qBAAqB,CAAC","sourcesContent":["import React from \"react\";\r\nimport { useField, useFormikContext } from \"formik\";\r\nimport { TextField } from \"@mui/material\";\r\n\r\nconst SuffixTextareaWrapper = ({ name, suffix, maskType, ...otherProps }) => {\r\n  const { setFieldValue } = useFormikContext();\r\n  const [field, mata] = useField(name);\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value.endsWith(suffix)) {\r\n      setFieldValue(name, value);\r\n    } else if (!value.includes(suffix) && !field.value.includes(suffix)) {\r\n      setFieldValue(name, value + suffix);\r\n    }\r\n  };\r\n\r\n  const configTextarea = {\r\n    ...field,\r\n    ...otherProps,\r\n    fullWidth: true,\r\n    variant: \"outlined\",\r\n    onChange: handleInputChange,\r\n  };\r\n\r\n  if (mata && mata.touched && mata.error) {\r\n    configTextarea.error = true;\r\n    configTextarea.helperText = mata.error;\r\n  }\r\n\r\n  return <TextField {...configTextarea} margin=\"dense\" />;\r\n};\r\n\r\nexport default SuffixTextareaWrapper;\r\n"]}