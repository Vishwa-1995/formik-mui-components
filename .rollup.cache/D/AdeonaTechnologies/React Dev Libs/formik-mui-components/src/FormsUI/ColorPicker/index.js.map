{"version":3,"file":"index.js","sourceRoot":"","sources":["index.jsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,aAAa,CAAC;AACrB,OAAO,EAAE,YAAY,EAAE,MAAM,aAAa,CAAC;AAC3C,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,MAAM,QAAQ,CAAC;AACpD,OAAO,UAAU,MAAM,0BAA0B,CAAC;AAElD,MAAM,WAAW,GAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,UAAU,EAAE,EAAE,EAAE;IACrD,MAAM,EAAE,aAAa,EAAE,GAAG,gBAAgB,EAAE,CAAC;IAC7C,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IACrC,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAEtD,MAAM,WAAW,GAAG,GAAG,EAAE;QACvB,cAAc,CAAC,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC,CAAC;IAEF,MAAM,WAAW,GAAG,GAAG,EAAE;QACvB,cAAc,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC,CAAC;IAEF,MAAM,YAAY,GAAG,CAAC,KAAK,EAAE,EAAE;QAC7B,aAAa,CACX,IAAI,EACJ,QAAQ,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CACvE,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO,CACL,eAAK,SAAS,EAAC,KAAK,aAClB,cAAK,SAAS,EAAC,OAAO,YACpB,KAAC,UAAU,IAAC,OAAO,EAAC,OAAO,EAAC,KAAK,EAAC,eAAe,YAC9C,KAAK,GACK,GACT,EACN,cAAK,SAAS,EAAC,KAAK,YAClB,cAAK,SAAS,EAAC,QAAQ,EAAC,OAAO,EAAE,WAAW,YAC1C,cACE,SAAS,EAAC,OAAO,EACjB,KAAK,EAAE;4BACL,UAAU,EAAE,KAAK,CAAC,KAAK;yBACxB,GACD,GACE,GACF,EACL,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACpB,KAAC,UAAU,IAAC,OAAO,EAAC,SAAS,EAAC,KAAK,EAAC,OAAO,YACxC,IAAI,CAAC,KAAK,GACA,CACd,CAAC,CAAC,CAAC,IAAI,EACP,WAAW,CAAC,CAAC,CAAC,CACb,eAAK,SAAS,EAAC,SAAS,aACtB,cAAK,SAAS,EAAC,OAAO,EAAC,OAAO,EAAE,WAAW,GAAI,EAC/C,KAAC,YAAY,IACX,SAAS,EAAC,eAAe,EACzB,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,QAAQ,EAAE,YAAY,GACtB,IACE,CACP,CAAC,CAAC,CAAC,IAAI,IACJ,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,WAAW,CAAC","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { useField, useFormikContext } from \"formik\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst ColorPicker = ({ name, label, ...otherProps }) => {\r\n  const { setFieldValue } = useFormikContext();\r\n  const [field, meta] = useField(name);\r\n  const [pickerState, setPickerState] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setPickerState(!pickerState);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setPickerState(false);\r\n  };\r\n\r\n  const handleChange = (color) => {\r\n    setFieldValue(\r\n      name,\r\n      `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-9\">\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          {label}\r\n        </Typography>\r\n      </div>\r\n      <div className=\"col\">\r\n        <div className=\"swatch\" onClick={handleClick}>\r\n          <div\r\n            className=\"color\"\r\n            style={{\r\n              background: field.value,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      {meta && meta.error ? (\r\n        <Typography variant=\"caption\" color=\"error\">\r\n          {meta.error}\r\n        </Typography>\r\n      ) : null}\r\n      {pickerState ? (\r\n        <div className=\"popover\">\r\n          <div className=\"cover\" onClick={handleClose} />\r\n          <SketchPicker\r\n            className=\"sketch-picker\"\r\n            color={field.value}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorPicker;\r\n"]}