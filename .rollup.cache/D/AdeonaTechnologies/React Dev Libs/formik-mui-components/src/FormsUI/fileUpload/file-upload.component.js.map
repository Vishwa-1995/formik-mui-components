{"version":3,"file":"file-upload.component.js","sourceRoot":"","sources":["file-upload.component.jsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, } from \"react\";\r\nimport {\r\n    FileUploadContainer,\r\n    FormField,\r\n    DragDropText,\r\n    UploadFileBtn,\r\n    FilePreviewContainer,\r\n    ImagePreview,\r\n    PreviewContainer,\r\n    PreviewList,\r\n    FileMetaData,\r\n    RemoveFileIcon,\r\n    VideoPreview\r\n} from \"./file-upload.styles\";\r\nimport { useField, useFormikContext } from \"formik\";\r\nimport { Badge, Box, Typography } from \"@mui/material\";\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport ImageCropper, { closeImageCropper, openImageCropper } from \"./imageCropper\";\r\nimport { _setImage } from \"../../../utils\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport CropIcon from '@mui/icons-material/Crop';\r\nimport FileUploadIcon from '@mui/icons-material/FileUpload';\r\nimport Grid from \"@mui/material/Grid\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport { openFileViewer } from \"../../FileViewer\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { IMAGE_SIZE } from \"../../../../store/constants\";\r\n\r\nconst KILO_BYTES_PER_BYTE = 1024;\r\nconst DEFAULT_MAX_FILE_SIZE_IN_BYTES = IMAGE_SIZE;\r\n\r\nexport const convertBytesToKB = (bytes) => Math.round(bytes / KILO_BYTES_PER_BYTE);\r\nexport const convertBytesToMB = (bytes) => Math.round(bytes / (KILO_BYTES_PER_BYTE * KILO_BYTES_PER_BYTE));\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n    return (\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n            <Box sx={{ width: '100%', mr: 1 }}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box sx={{ minWidth: 35 }}>\r\n                <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                    {`${Math.round(props.value)}%`}\r\n                </Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nconst FileUpload = ({\r\n    label,\r\n    name,\r\n    maxFileSizeInBytes = DEFAULT_MAX_FILE_SIZE_IN_BYTES,\r\n    progress,\r\n    ...otherProps\r\n}) => {\r\n    const theme = useTheme();\r\n    const fileInputField = useRef(null);\r\n    const { setFieldValue } = useFormikContext();\r\n    const [field, meta] = useField(name);\r\n\r\n    const handleUploadBtnClick = () => {\r\n        fileInputField.current.click();\r\n    };\r\n\r\n    const addNewFiles = (newFiles) => {\r\n        let totalFileSize = field.value?.reduce(\r\n            (accumulator, curValue) => {\r\n                return accumulator + curValue.size\r\n            }, 0);\r\n\r\n        for (let file of newFiles) {\r\n            totalFileSize += file.size;\r\n            if (totalFileSize <= maxFileSizeInBytes) {\r\n                if (!otherProps.multiple) {\r\n                    return [file];\r\n                }\r\n                field.value = [...field.value, file];\r\n            }\r\n        }\r\n\r\n        return [...field.value];\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (field.value && typeof field.value.name == 'string') {\r\n            let updatedFiles = addNewFiles([field.value]);\r\n            setFieldValue(name, updatedFiles);\r\n        }\r\n    }, [field.value])\r\n\r\n    const handleNewFileUpload = (e) => {\r\n        const { files: newFiles } = e.target;\r\n        if (newFiles.length) {\r\n            let updatedFiles = addNewFiles(newFiles);\r\n            setFieldValue(name, updatedFiles);\r\n        }\r\n    };\r\n\r\n    const removeFile = (fileIndex) => {\r\n        field.value.splice(fileIndex, 1);\r\n        setFieldValue(name, field.value);\r\n    };\r\n\r\n    // Generating Cropped Image When Done Button Clicked\r\n    const onCropDone = (imgCroppedArea, image, fileName) => {\r\n        const canvasEle = document.createElement(\"canvas\");\r\n        canvasEle.width = imgCroppedArea.width;\r\n        canvasEle.height = imgCroppedArea.height;\r\n\r\n        const context = canvasEle.getContext(\"2d\");\r\n\r\n        let imageObj1 = new Image();\r\n        imageObj1.src = image;\r\n        imageObj1.onload = function () {\r\n            context.drawImage(\r\n                imageObj1,\r\n                imgCroppedArea.x,\r\n                imgCroppedArea.y,\r\n                imgCroppedArea.width,\r\n                imgCroppedArea.height,\r\n                0,\r\n                0,\r\n                imgCroppedArea.width,\r\n                imgCroppedArea.height\r\n            );\r\n\r\n            const dataURL = canvasEle.toDataURL();\r\n\r\n            _setImage(\r\n                dataURL,\r\n                fileName\r\n            ).then((value => {\r\n                let updatedField = field.value.map(obj => obj.name === fileName ? value : obj);\r\n                setFieldValue(name, updatedField);\r\n                closeImageCropper();\r\n            }));\r\n        };\r\n    };\r\n\r\n    // Handle Cancel Button Click\r\n    const onCropCancel = () => {\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"row\">\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {label}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <FileUploadContainer>\r\n                        <DragDropText>Drag and drop your files anywhere or</DragDropText>\r\n                        <UploadFileBtn type=\"button\" onClick={handleUploadBtnClick}\r\n                            disabled={otherProps.disabled}>\r\n                            <FileUploadIcon sx={{ fontSize: '20px' }} />\r\n                            <span> Select {otherProps.multiple ? \"files\" : \"a file\"}</span>\r\n                        </UploadFileBtn>\r\n                        <FormField\r\n                            type=\"file\"\r\n                            ref={fileInputField}\r\n                            onChange={handleNewFileUpload}\r\n                            title=\"\"\r\n                            value=\"\"\r\n                            {...otherProps}\r\n                        />\r\n                    </FileUploadContainer>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <FilePreviewContainer>\r\n                        {/* <span>To Upload</span> */}\r\n                        <PreviewList>\r\n                            {field.value?.map((file, index) => {\r\n\r\n                                const allowedTypes = [\r\n                                    \"text/csv\",                    // CSV file\r\n                                    \"application/vnd.ms-excel\",     // Old Excel (.xls)\r\n                                    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", // New Excel (.xlsx)\r\n                                ];\r\n                                let isPdfFile = file?.type === \"application/pdf\";\r\n                                let isExcelFile = allowedTypes.includes(file.type);\r\n                                let isImageFile = file?.type?.split(\"/\")[0] === \"image\";\r\n                                let isVideoFile = file?.type?.split(\"/\")[0] === \"video\";\r\n                                return (\r\n                                    <Grid container key={file.name} spacing={2} marginTop={0.2}>\r\n                                        <Grid item>\r\n                                            {URL.createObjectURL(file) && <Badge\r\n                                                overlap=\"circular\"\r\n                                                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                                                badgeContent={\r\n                                                    <CancelIcon color=\"primary\" onClick={() => removeFile(index)} />\r\n                                                }\r\n                                                sx={{ cursor: 'pointer', color: 'var(--primary-color)', display: 'flex' }}\r\n                                            />\r\n                                            }\r\n                                            <PreviewContainer>\r\n                                                <Box>\r\n                                                    {isPdfFile && (\r\n                                                        <ImagePreview\r\n                                                            src='https://dsuabgmmtxmj1.cloudfront.net/common/pdf_file_icon.png'\r\n                                                            alt={`file preview ${index}`}\r\n                                                        />\r\n                                                    )}\r\n                                                    {isExcelFile && (\r\n                                                        <ImagePreview\r\n                                                            src='https://cdn.adeonatech.net/common/ms-excel.png'\r\n                                                            alt={`file preview ${index}`}\r\n                                                        />\r\n                                                    )}\r\n                                                    {isImageFile && (\r\n                                                        <ImagePreview\r\n                                                            src={URL.createObjectURL(file)}\r\n                                                            alt={`file preview ${index}`}\r\n                                                        />\r\n                                                    )}\r\n                                                    {isVideoFile && (\r\n                                                        <VideoPreview\r\n                                                            alt={`file preview ${index}`}\r\n                                                            autoplay muted\r\n                                                        >\r\n                                                            <source src={URL.createObjectURL(file)}\r\n                                                                type={file?.type}></source>\r\n                                                        </VideoPreview>\r\n                                                    )}\r\n                                                    <FileMetaData isPdfFile={isPdfFile} isImageFile={isImageFile}\r\n                                                        isVideoFile={isVideoFile} isExcelFile={isExcelFile}>\r\n                                                        <Typography\r\n                                                            width={100} color='white'\r\n                                                            variant=\"subtitle2\"\r\n                                                            style={{\r\n                                                                wordWrap: 'break-word',\r\n                                                                fontWeight: 'bold'\r\n                                                            }}>{(((file.name).substring(0, 30)) + (file.name.length > 30 ? '...' : ''))}</Typography>\r\n                                                        <aside>\r\n                                                            <Typography\r\n                                                                width={100} color='white'\r\n                                                                variant=\"subtitle2\">{convertBytesToKB(file.size)} kb</Typography>\r\n                                                            <aside>\r\n                                                                {/*<RemoveFileIcon*/}\r\n                                                                {/*    color='secondary'*/}\r\n                                                                {/*    size='small'*/}\r\n                                                                {/*    onClick={() => removeFile(fileName)}*/}\r\n                                                                {/*><DeleteIcon/></RemoveFileIcon>*/}\r\n                                                                <RemoveFileIcon\r\n                                                                    color='inherit'\r\n                                                                    size='small'\r\n                                                                    onClick={() => {\r\n                                                                        openFileViewer(file)\r\n                                                                    }}\r\n                                                                ><VisibilityIcon /></RemoveFileIcon>\r\n                                                                {isImageFile && <RemoveFileIcon\r\n                                                                    color='secondary'\r\n                                                                    size='small'\r\n                                                                    onClick={() => {\r\n                                                                        openImageCropper(\r\n                                                                            URL.createObjectURL(file),\r\n                                                                            file.name,\r\n                                                                            onCropDone,\r\n                                                                            onCropCancel\r\n                                                                        )\r\n                                                                    }}\r\n                                                                ><CropIcon /></RemoveFileIcon>}\r\n                                                            </aside>\r\n                                                        </aside>\r\n                                                    </FileMetaData>\r\n                                                </Box>\r\n                                            </PreviewContainer>\r\n                                        </Grid>\r\n                                        <Grid item xs={9.5} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                            <Grid container>\r\n                                                <Typography variant=\"subtitle2\" color={theme.palette.dark.main}>{(((file.name).substring(0, 30)) + (file.name.length > 30 ? '...' : ''))}</Typography>\r\n                                                <Box sx={{ width: '100%' }}>\r\n                                                    <LinearProgressWithLabel value={progress} />\r\n                                                </Box>\r\n                                                <Grid item xs={6}>\r\n                                                    <Typography variant=\"h6\" color=\"grey\">{convertBytesToKB(file.size)} kb of {convertBytesToMB(maxFileSizeInBytes)} MB </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={6} display=\"flex\" justifyContent=\"flex-end\" alignItems=\"flex-end\">\r\n                                                    {isImageFile && <Typography variant=\"h6\" color=\"primary\" sx={{ cursor: \"pointer\", marginX: 1 }} onClick={() => {\r\n                                                        openImageCropper(\r\n                                                            URL.createObjectURL(file),\r\n                                                            file.name,\r\n                                                            onCropDone,\r\n                                                            onCropCancel\r\n                                                        )\r\n                                                    }}>Crop</Typography>}\r\n                                                    {!isExcelFile && <Typography variant=\"h6\" color=\"primary\" sx={{ cursor: \"pointer\", marginX: 1 }} onClick={() => {\r\n                                                        openFileViewer(file)\r\n                                                    }}>View</Typography>}\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                );\r\n                            })}\r\n                        </PreviewList>\r\n                    </FilePreviewContainer>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {meta && meta.error ? <Typography variant=\"caption\" color='error'>{meta.error}</Typography> : null}\r\n                </Grid>\r\n            </Grid>\r\n            <ImageCropper />\r\n        </>\r\n    );\r\n}\r\n    ;\r\n\r\nexport default FileUpload;"]}